syntax = "proto3";
package bitsong.cadence.v1;

option go_package = "github.com/bitsongofficial/go-bitsong/x/cadence/types";

import "google/api/annotations.proto";
import "cosmos/msg/v1/msg.proto";
import "bitsong/cadence/v1/genesis.proto";
import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "amino/amino.proto";

// Msg defines the Msg service.
service Msg {  
  option (cosmos.msg.v1.service) = true;

  // RegisterCadenceContract defines the endpoint for
  // registering a new cadence contract .
  rpc RegisterCadenceContract(MsgRegisterCadenceContract) 
      returns (MsgRegisterCadenceContractResponse) {
    option (google.api.http).post = "/bitsong/cadence/v1/tx/register";
  };

  // UnregisterCadenceContract defines the endpoint for
  // unregistering a cadence contract .
  rpc UnregisterCadenceContract(MsgUnregisterCadenceContract) 
      returns (MsgUnregisterCadenceContractResponse) {
    option (google.api.http).post = "/bitsong/cadence/v1/tx/unregister";
  };

  // UnjailCadenceContract defines the endpoint for
  // unjailing a cadence contract .
  rpc UnjailCadenceContract(MsgUnjailCadenceContract) 
      returns (MsgUnjailCadenceContractResponse) {
    option (google.api.http).post = "/bitsong/cadence/v1/tx/unjail";
  };

  // UpdateParams defines a governance operation for updating the x/cadence module
  // parameters. The authority is hard-coded to the x/gov module account.
  //
  // Since: cosmos-sdk 0.47
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
}

// MsgRegisterCadenceContract is the Msg/RegisterCadenceContract request type.
message MsgRegisterCadenceContract {
  option (cosmos.msg.v1.signer) = "sender_address";
  // The address of the sender.
  string sender_address = 1;
  // The address of the contract to register.
  string contract_address = 2;
}

// MsgRegisterCadenceContractResponse defines the response structure for executing a
// MsgRegisterCadenceContract message.
message MsgRegisterCadenceContractResponse {}

// MsgUnregisterCadenceContract is the Msg/UnregisterCadenceContract request type.
message MsgUnregisterCadenceContract {
  option (cosmos.msg.v1.signer) = "sender_address";
  // The address of the sender.
  string sender_address = 1;
  // The address of the contract to unregister.
  string contract_address = 2;
}

// MsgUnregisterCadenceContractResponse defines the response structure for executing a
// MsgUnregisterCadenceContract message.
message MsgUnregisterCadenceContractResponse {}

// MsgUnjailCadenceContract is the Msg/UnjailCadenceContract request type.
message MsgUnjailCadenceContract {
  option (cosmos.msg.v1.signer) = "sender_address";
  // The address of the sender.
  string sender_address = 1;
  // The address of the contract to unjail.
  string contract_address = 2;
}

// MsgUnjailCadenceContractResponse defines the response structure for executing a
// MsgUnjailCadenceContract message.
message MsgUnjailCadenceContractResponse {}

// MsgUpdateParams is the Msg/UpdateParams request type.
//
// Since: cosmos-sdk 0.47
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";

  // authority is the address of the governance account.
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the x/cadence parameters to update.
  //
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
//
// Since: cosmos-sdk 0.47
message MsgUpdateParamsResponse {}
